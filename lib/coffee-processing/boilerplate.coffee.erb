<%= javascript_object %> = (processing) ->
  for __sym of processing when eval("typeof #{__sym} === 'undefined'")
    if typeof processing[__sym] == 'function'
      eval "var #{__sym} = function() { return processing.#{__sym}.apply(processing, arguments) }"
    else
      eval "var #{__sym} = function() { return processing.#{__sym} }"
  null

  <%= code %>

  for callback in [
    'setup',
    'draw',
    'mouseClicked',
    'mouseDragged',
    'mouseMoved',
    'mouseOut',
    'mouseOver',
    'mousePressed',
    'mouseReleased',
    'keyPressed',
    'keyReleased',
    'keyTyped'
  ] when !eval("typeof #{__sym} === 'undefined'")
    eval "processing.#{callback} = #{callback}"

